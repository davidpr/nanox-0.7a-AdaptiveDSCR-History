# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/core/debug/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#####################################################################################
#      Copyright 2009 Barcelona Supercomputing Center                               #
#                                                                                   #
#      This file is part of the NANOS++ library.                                    #
#                                                                                   #
#      NANOS++ is free software: you can redistribute it and/or modify              #
#      it under the terms of the GNU Lesser General Public License as published by  #
#      the Free Software Foundation, either version 3 of the License, or            #
#      (at your option) any later version.                                          #
#                                                                                   #
#      NANOS++ is distributed in the hope that it will be useful,                   #
#      but WITHOUT ANY WARRANTY; without even the implied warranty of               #
#      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
#      GNU Lesser General Public License for more details.                          #
#                                                                                   #
#      You should have received a copy of the GNU Lesser General Public License     #
#      along with NANOS++.  If not, see <http://www.gnu.org/licenses/>.             #
#####################################################################################



pkgdatadir = $(datadir)/nanox
pkglibdir = $(libdir)/nanox
pkgincludedir = $(includedir)/nanox
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = powerpc64-suse-linux-gnu
host_triplet = powerpc64-suse-linux-gnu
target_triplet = powerpc64-suse-linux-gnu
DIST_COMMON = $(devinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/src/common.am \
	$(top_srcdir)/src/core/version_commons.am
subdir = src/core/debug
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/atomic_builtins.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(debugdir)" "$(DESTDIR)$(devincludedir)"
debugLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(debug_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__libnanox_la_SOURCES_DIST = $(top_srcdir)/src/core/nanos-int.h \
	$(top_srcdir)/src/core/nanos_error.h \
	$(top_srcdir)/src/core/barrier_fwd.hpp \
	$(top_srcdir)/src/core/barrier_decl.hpp \
	$(top_srcdir)/src/core/barrier.hpp \
	$(top_srcdir)/src/core/cachedaccelerator_decl.hpp \
	$(top_srcdir)/src/core/cachedaccelerator.hpp \
	$(top_srcdir)/src/core/threadteam_fwd.hpp \
	$(top_srcdir)/src/core/threadteam_decl.hpp \
	$(top_srcdir)/src/core/threadteam.hpp \
	$(top_srcdir)/src/core/threadteam.cpp \
	$(top_srcdir)/src/core/basethread_fwd.hpp \
	$(top_srcdir)/src/core/basethread_decl.hpp \
	$(top_srcdir)/src/core/basethread.hpp \
	$(top_srcdir)/src/core/basethread.cpp \
	$(top_srcdir)/src/core/processingelement_fwd.hpp \
	$(top_srcdir)/src/core/processingelement_decl.hpp \
	$(top_srcdir)/src/core/processingelement.hpp \
	$(top_srcdir)/src/core/processingelement.cpp \
	$(top_srcdir)/src/core/accelerator_fwd.hpp \
	$(top_srcdir)/src/core/accelerator_decl.hpp \
	$(top_srcdir)/src/core/accelerator.cpp \
	$(top_srcdir)/src/core/schedule_fwd.hpp \
	$(top_srcdir)/src/core/schedule_decl.hpp \
	$(top_srcdir)/src/core/schedule.hpp \
	$(top_srcdir)/src/core/schedule.cpp \
	$(top_srcdir)/src/core/system_fwd.hpp \
	$(top_srcdir)/src/core/system_decl.hpp \
	$(top_srcdir)/src/core/system.hpp \
	$(top_srcdir)/src/core/system.cpp \
	$(top_srcdir)/src/core/wddeque_fwd.hpp \
	$(top_srcdir)/src/core/wddeque_decl.hpp \
	$(top_srcdir)/src/core/wddeque.hpp \
	$(top_srcdir)/src/core/workgroup_fwd.hpp \
	$(top_srcdir)/src/core/workgroup_decl.hpp \
	$(top_srcdir)/src/core/workgroup.hpp \
	$(top_srcdir)/src/core/workgroup.cpp \
	$(top_srcdir)/src/core/workdescriptor_fwd.hpp \
	$(top_srcdir)/src/core/workdescriptor_decl.hpp \
	$(top_srcdir)/src/core/workdescriptor.hpp \
	$(top_srcdir)/src/core/workdescriptor.cpp \
	$(top_srcdir)/src/core/worksharing_decl.hpp \
	$(top_srcdir)/src/core/slicer_fwd.hpp \
	$(top_srcdir)/src/core/slicer_decl.hpp \
	$(top_srcdir)/src/core/slicer.hpp \
	$(top_srcdir)/src/core/instrumentationcontext_fwd.hpp \
	$(top_srcdir)/src/core/instrumentationcontext_decl.hpp \
	$(top_srcdir)/src/core/instrumentationcontext.hpp \
	$(top_srcdir)/src/core/instrumentationmodule_decl.hpp \
	$(top_srcdir)/src/core/instrumentation_fwd.hpp \
	$(top_srcdir)/src/core/instrumentation_decl.hpp \
	$(top_srcdir)/src/core/instrumentation.hpp \
	$(top_srcdir)/src/core/throttle_fwd.hpp \
	$(top_srcdir)/src/core/throttle_decl.hpp \
	$(top_srcdir)/src/core/dataaccess_fwd.hpp \
	$(top_srcdir)/src/core/dataaccess_decl.hpp \
	$(top_srcdir)/src/core/dataaccess.hpp \
	$(top_srcdir)/src/core/copydata_fwd.hpp \
	$(top_srcdir)/src/core/copydata_decl.hpp \
	$(top_srcdir)/src/core/copydata.hpp \
	$(top_srcdir)/src/core/dependableobject_fwd.hpp \
	$(top_srcdir)/src/core/dependableobject_decl.hpp \
	$(top_srcdir)/src/core/dependableobject.hpp \
	$(top_srcdir)/src/core/dependableobject.cpp \
	$(top_srcdir)/src/core/dependableobjectwd_fwd.hpp \
	$(top_srcdir)/src/core/dependableobjectwd_decl.hpp \
	$(top_srcdir)/src/core/dependableobjectwd.hpp \
	$(top_srcdir)/src/core/dependableobjectwd.cpp \
	$(top_srcdir)/src/core/commutationdepobj_decl.hpp \
	$(top_srcdir)/src/core/commutationdepobj.hpp \
	$(top_srcdir)/src/core/trackableobject_fwd.hpp \
	$(top_srcdir)/src/core/trackableobject_decl.hpp \
	$(top_srcdir)/src/core/trackableobject.hpp \
	$(top_srcdir)/src/core/dependenciesdomain_fwd.hpp \
	$(top_srcdir)/src/core/dependenciesdomain_decl.hpp \
	$(top_srcdir)/src/core/dependenciesdomain.hpp \
	$(top_srcdir)/src/core/dependenciesdomain.cpp \
	$(top_srcdir)/src/core/synchronizedcondition_fwd.hpp \
	$(top_srcdir)/src/core/synchronizedcondition_decl.hpp \
	$(top_srcdir)/src/core/synchronizedcondition.hpp \
	$(top_srcdir)/src/core/directory_decl.hpp \
	$(top_srcdir)/src/core/directory.hpp \
	$(top_srcdir)/src/core/directory.cpp \
	$(top_srcdir)/src/core/cache_map_decl.hpp \
	$(top_srcdir)/src/core/cache_map.hpp \
	$(top_srcdir)/src/core/pminterface_decl.hpp \
	$(top_srcdir)/src/core/address_fwd.hpp \
	$(top_srcdir)/src/core/address_decl.hpp \
	$(top_srcdir)/src/core/address.hpp \
	$(top_srcdir)/src/core/basedependency_fwd.hpp \
	$(top_srcdir)/src/core/basedependency_decl.hpp
am__objects_1 =
am__objects_2 = libnanox_la-threadteam.lo libnanox_la-basethread.lo \
	libnanox_la-processingelement.lo libnanox_la-accelerator.lo \
	libnanox_la-schedule.lo libnanox_la-system.lo \
	libnanox_la-workgroup.lo libnanox_la-workdescriptor.lo \
	libnanox_la-dependableobject.lo \
	libnanox_la-dependableobjectwd.lo \
	libnanox_la-dependenciesdomain.lo libnanox_la-directory.lo \
	$(am__objects_1)
#am_libnanox_la_OBJECTS = $(am__objects_2)
libnanox_la_OBJECTS = $(am_libnanox_la_OBJECTS)
libnanox_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libnanox_la_CXXFLAGS) \
	$(CXXFLAGS) $(libnanox_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libnanox_la_rpath = -rpath $(debugdir)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libnanox_la_SOURCES)
DIST_SOURCES = $(am__libnanox_la_SOURCES_DIST)
devincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(devinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dprat/nanox-0.7a-AdaptiveDSCR-History/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/dprat/nanox-0.7a-AdaptiveDSCR-History/missing --run tar
AR = ar
ARCHITECTURES =  smp
AUTOCONF = ${SHELL} /home/dprat/nanox-0.7a-AdaptiveDSCR-History/missing --run autoconf
AUTOHEADER = ${SHELL} /home/dprat/nanox-0.7a-AdaptiveDSCR-History/missing --run autoheader
AUTOMAKE = ${SHELL} /home/dprat/nanox-0.7a-AdaptiveDSCR-History/missing --run automake-1.10
AWK = gawk
AYUDAME_BIN = 
AYUDAME_HOME = 
AYUDAME_INC = 
AYUDAME_LIB = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS =  -DNANOS_DISABLE_ALLOCATOR -DNANOS_MEMTRACKER_ENABLED
CCDEPMODE = depmode=gcc3
CELLSDK_INC = 
CELLSDK_LIB = 
CFLAGS =  -DNANOS_DISABLE_ALLOCATOR -DNANOS_MEMTRACKER_ENABLED -Wredundant-decls
CHAPEL_HOME = 
CPP = gcc -E
CPPFLAGS = 
CUDA_INC = 
CUDA_LIB = 
CUDA_RPATH = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -DNANOS_DISABLE_ALLOCATOR -DNANOS_MEMTRACKER_ENABLED -Wredundant-decls
CYGPATH_W = echo
DEB_RELEASE = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FC = gfortran
FCFLAGS = 
FGREP = /usr/bin/grep -F
GIT = 
GREP = /usr/bin/grep
HWLOC_BIN = 
HWLOC_HOME = 
HWLOC_INC = 
HWLOC_LIB = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/powerpc64-suse-linux/bin/ld -m elf64ppc
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/dprat/nanox-0.7a-AdaptiveDSCR-History/missing --run makeinfo
MCC = 
MKDIR_P = /bin/mkdir -p
MKL_LIBS = 
MPITRACE_BIN = 
MPITRACE_HOME = 
MPITRACE_INC = 
MPITRACE_LIB = 
NANOS_CONFIG_LIBDIRS = 
NANOS_CONFIG_LIBS_DEBUG =   $(abs_top_builddir)/src/arch/smp/debug/libsmp.la $(abs_top_builddir)/src/arch/unix-os/debug/libos.la $(abs_top_builddir)/src/support/debug/libsupport.la
NANOS_CONFIG_LIBS_INSTR =   $(abs_top_builddir)/src/arch/smp/instrumentation/libsmp.la $(abs_top_builddir)/src/arch/unix-os/instrumentation/libos.la $(abs_top_builddir)/src/support/instrumentation/libsupport.la
NANOS_CONFIG_LIBS_INSTRDEBUG =   $(abs_top_builddir)/src/arch/smp/instrumentation-debug/libsmp.la $(abs_top_builddir)/src/arch/unix-os/instrumentation-debug/libos.la $(abs_top_builddir)/src/support/instrumentation-debug/libsupport.la
NANOS_CONFIG_LIBS_PERFO =   $(abs_top_builddir)/src/arch/smp/performance/libsmp.la $(abs_top_builddir)/src/arch/unix-os/performance/libos.la $(abs_top_builddir)/src/support/performance/libsupport.la
NEXTSIM_HOME = 
NEXTSIM_INC = 
NM = /usr/bin/nm -B
NMEDIT = 
NVCC = 
OBJDUMP = objdump
OBJEXT = o
OPENCL_INC = /usr/include/
OPENCL_LD = 
OPTIONS = 
OS = unix-os
OTOOL = 
OTOOL64 = 
PACKAGE = nanox
PACKAGE_BUGREPORT = pmtools@bsc.es
PACKAGE_NAME = nanox
PACKAGE_STRING = nanox 0.7a
PACKAGE_TARNAME = nanox
PACKAGE_VERSION = 0.7a
PAPI_BIN = /home/dprat/Applications/papi-5.3.0/bin
PAPI_HOME = /home/dprat/Applications/papi-5.3.0
PAPI_INC = /home/dprat/Applications/papi-5.3.0/include
PAPI_LIB = /home/dprat/Applications/papi-5.3.0/lib
PATH_SEPARATOR = :
PPUEMBED = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SMP_ARCH = ppc64
SPUCC = 
STRIP = strip
USED_VERSION = instrumentation
VERSION = 0.7a
abs_builddir = /home/dprat/nanox-0.7a-AdaptiveDSCR-History/src/core/debug
abs_srcdir = /home/dprat/nanox-0.7a-AdaptiveDSCR-History/src/core/debug
abs_top_builddir = /home/dprat/nanox-0.7a-AdaptiveDSCR-History
abs_top_srcdir = /home/dprat/nanox-0.7a-AdaptiveDSCR-History
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = powerpc64-suse-linux-gnu
build_alias = 
build_cpu = powerpc64
build_os = linux-gnu
build_vendor = suse
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
debugdir = ${libdir}/debug
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gpu_valid = no
host = powerpc64-suse-linux-gnu
host_alias = 
host_cpu = powerpc64
host_os = linux-gnu
host_vendor = suse
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/dprat/nanox-0.7a-AdaptiveDSCR-History/install-sh
instrdebugdir = ${libdir}/instrumentation-debug
instrumentationdir = ${libdir}/instrumentation
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mcc_valid = no
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
opencl_valid = no
pdfdir = ${docdir}
performancedir = ${libdir}/performance
prefix = /home/dprat/Applications/nanosdynamichistory
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = powerpc64-suse-linux-gnu
target_alias = 
target_cpu = powerpc64
target_os = linux-gnu
target_vendor = suse
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
common_libadd = \
	$(END)

devinclude_HEADERS = \
	$(top_srcdir)/src/core/nanos_error.h \
	$(top_srcdir)/src/core/barrier_fwd.hpp \
	$(top_srcdir)/src/core/threadteam_fwd.hpp \
	$(top_srcdir)/src/core/basethread_fwd.hpp\
	$(top_srcdir)/src/core/processingelement_fwd.hpp \
	$(top_srcdir)/src/core/accelerator_fwd.hpp \
	$(top_srcdir)/src/core/schedule_fwd.hpp \
	$(top_srcdir)/src/core/system_fwd.hpp \
	$(top_srcdir)/src/core/wddeque_fwd.hpp \
	$(top_srcdir)/src/core/workgroup_fwd.hpp \
	$(top_srcdir)/src/core/workdescriptor_fwd.hpp \
	$(top_srcdir)/src/core/slicer_fwd.hpp \
	$(top_srcdir)/src/core/instrumentationcontext_fwd.hpp \
	$(top_srcdir)/src/core/instrumentation_fwd.hpp \
	$(top_srcdir)/src/core/throttle_fwd.hpp \
	$(top_srcdir)/src/core/dataaccess_fwd.hpp \
	$(top_srcdir)/src/core/copydata_fwd.hpp \
	$(top_srcdir)/src/core/dependableobject_fwd.hpp \
	$(top_srcdir)/src/core/dependableobjectwd_fwd.hpp \
	$(top_srcdir)/src/core/trackableobject_fwd.hpp \
	$(top_srcdir)/src/core/dependenciesdomain_fwd.hpp \
	$(top_srcdir)/src/core/synchronizedcondition_fwd.hpp \
	$(top_srcdir)/src/core/address_fwd.hpp \
	$(top_srcdir)/src/core/basedependency_fwd.hpp \
	$(top_srcdir)/src/core/nanos-int.h \
	$(top_srcdir)/src/core/barrier_decl.hpp \
	$(top_srcdir)/src/core/barrier.hpp \
   $(top_srcdir)/src/core/cachedaccelerator_decl.hpp \
   $(top_srcdir)/src/core/cachedaccelerator.hpp \
	$(top_srcdir)/src/core/threadteam_decl.hpp \
	$(top_srcdir)/src/core/threadteam.hpp \
	$(top_srcdir)/src/core/basethread_decl.hpp\
	$(top_srcdir)/src/core/basethread.hpp\
	$(top_srcdir)/src/core/processingelement_decl.hpp \
	$(top_srcdir)/src/core/processingelement.hpp \
	$(top_srcdir)/src/core/accelerator_decl.hpp \
	$(top_srcdir)/src/core/schedule_decl.hpp \
	$(top_srcdir)/src/core/schedule.hpp \
	$(top_srcdir)/src/core/system_decl.hpp\
	$(top_srcdir)/src/core/system.hpp \
	$(top_srcdir)/src/core/wddeque_decl.hpp \
	$(top_srcdir)/src/core/wddeque.hpp \
	$(top_srcdir)/src/core/workgroup_decl.hpp \
	$(top_srcdir)/src/core/workgroup.hpp \
	$(top_srcdir)/src/core/workdescriptor_decl.hpp \
	$(top_srcdir)/src/core/workdescriptor.hpp \
	$(top_srcdir)/src/core/worksharing_decl.hpp \
	$(top_srcdir)/src/core/slicer_decl.hpp \
	$(top_srcdir)/src/core/slicer.hpp \
	$(top_srcdir)/src/core/instrumentationcontext_decl.hpp \
	$(top_srcdir)/src/core/instrumentationcontext.hpp \
	$(top_srcdir)/src/core/instrumentationmodule_decl.hpp \
	$(top_srcdir)/src/core/instrumentation_decl.hpp \
	$(top_srcdir)/src/core/instrumentation.hpp \
	$(top_srcdir)/src/core/throttle_decl.hpp \
	$(top_srcdir)/src/core/dataaccess_decl.hpp \
	$(top_srcdir)/src/core/dataaccess.hpp \
	$(top_srcdir)/src/core/copydata_decl.hpp \
	$(top_srcdir)/src/core/copydata.hpp \
	$(top_srcdir)/src/core/dependableobject_decl.hpp \
	$(top_srcdir)/src/core/dependableobject.hpp \
	$(top_srcdir)/src/core/dependableobjectwd_decl.hpp \
	$(top_srcdir)/src/core/dependableobjectwd.hpp \
	$(top_srcdir)/src/core/commutationdepobj_decl.hpp \
	$(top_srcdir)/src/core/commutationdepobj.hpp \
	$(top_srcdir)/src/core/trackableobject_decl.hpp \
	$(top_srcdir)/src/core/trackableobject.hpp \
	$(top_srcdir)/src/core/dependenciesdomain_decl.hpp \
	$(top_srcdir)/src/core/dependenciesdomain.hpp \
	$(top_srcdir)/src/core/synchronizedcondition_decl.hpp \
	$(top_srcdir)/src/core/synchronizedcondition.hpp \
	$(top_srcdir)/src/core/directory_decl.hpp \
	$(top_srcdir)/src/core/directory.hpp \
	$(top_srcdir)/src/core/cache_map_decl.hpp \
	$(top_srcdir)/src/core/cache_map.hpp \
	$(top_srcdir)/src/core/pminterface_decl.hpp  \
	$(top_srcdir)/src/core/basethread_decl.hpp \
	$(top_srcdir)/src/core/address_decl.hpp \
	$(top_srcdir)/src/core/address.hpp \
	$(top_srcdir)/src/core/basedependency_decl.hpp \
	$(END)

common_sources = \
	$(top_srcdir)/src/core/nanos-int.h \
	$(top_srcdir)/src/core/nanos_error.h \
	$(top_srcdir)/src/core/barrier_fwd.hpp \
	$(top_srcdir)/src/core/barrier_decl.hpp \
	$(top_srcdir)/src/core/barrier.hpp \
        $(top_srcdir)/src/core/cachedaccelerator_decl.hpp \
        $(top_srcdir)/src/core/cachedaccelerator.hpp \
	$(top_srcdir)/src/core/threadteam_fwd.hpp \
	$(top_srcdir)/src/core/threadteam_decl.hpp \
	$(top_srcdir)/src/core/threadteam.hpp \
	$(top_srcdir)/src/core/threadteam.cpp \
	$(top_srcdir)/src/core/basethread_fwd.hpp\
	$(top_srcdir)/src/core/basethread_decl.hpp\
	$(top_srcdir)/src/core/basethread.hpp\
	$(top_srcdir)/src/core/basethread.cpp\
	$(top_srcdir)/src/core/processingelement_fwd.hpp \
	$(top_srcdir)/src/core/processingelement_decl.hpp \
	$(top_srcdir)/src/core/processingelement.hpp \
	$(top_srcdir)/src/core/processingelement.cpp \
	$(top_srcdir)/src/core/accelerator_fwd.hpp \
	$(top_srcdir)/src/core/accelerator_decl.hpp \
	$(top_srcdir)/src/core/accelerator.cpp \
	$(top_srcdir)/src/core/schedule_fwd.hpp \
	$(top_srcdir)/src/core/schedule_decl.hpp \
	$(top_srcdir)/src/core/schedule.hpp \
	$(top_srcdir)/src/core/schedule.cpp \
	$(top_srcdir)/src/core/system_fwd.hpp \
	$(top_srcdir)/src/core/system_decl.hpp\
	$(top_srcdir)/src/core/system.hpp \
	$(top_srcdir)/src/core/system.cpp \
	$(top_srcdir)/src/core/wddeque_fwd.hpp \
	$(top_srcdir)/src/core/wddeque_decl.hpp \
	$(top_srcdir)/src/core/wddeque.hpp \
	$(top_srcdir)/src/core/workgroup_fwd.hpp \
	$(top_srcdir)/src/core/workgroup_decl.hpp \
	$(top_srcdir)/src/core/workgroup.hpp \
	$(top_srcdir)/src/core/workgroup.cpp \
	$(top_srcdir)/src/core/workdescriptor_fwd.hpp \
	$(top_srcdir)/src/core/workdescriptor_decl.hpp \
	$(top_srcdir)/src/core/workdescriptor.hpp \
	$(top_srcdir)/src/core/workdescriptor.cpp \
	$(top_srcdir)/src/core/worksharing_decl.hpp \
	$(top_srcdir)/src/core/slicer_fwd.hpp \
	$(top_srcdir)/src/core/slicer_decl.hpp \
	$(top_srcdir)/src/core/slicer.hpp \
	$(top_srcdir)/src/core/instrumentationcontext_fwd.hpp \
	$(top_srcdir)/src/core/instrumentationcontext_decl.hpp \
	$(top_srcdir)/src/core/instrumentationcontext.hpp \
	$(top_srcdir)/src/core/instrumentationmodule_decl.hpp \
	$(top_srcdir)/src/core/instrumentation_fwd.hpp \
	$(top_srcdir)/src/core/instrumentation_decl.hpp \
	$(top_srcdir)/src/core/instrumentation.hpp \
	$(top_srcdir)/src/core/throttle_fwd.hpp \
	$(top_srcdir)/src/core/throttle_decl.hpp \
	$(top_srcdir)/src/core/dataaccess_fwd.hpp \
	$(top_srcdir)/src/core/dataaccess_decl.hpp \
	$(top_srcdir)/src/core/dataaccess.hpp \
	$(top_srcdir)/src/core/copydata_fwd.hpp \
	$(top_srcdir)/src/core/copydata_decl.hpp \
	$(top_srcdir)/src/core/copydata.hpp \
	$(top_srcdir)/src/core/dependableobject_fwd.hpp \
	$(top_srcdir)/src/core/dependableobject_decl.hpp \
	$(top_srcdir)/src/core/dependableobject.hpp \
	$(top_srcdir)/src/core/dependableobject.cpp \
	$(top_srcdir)/src/core/dependableobjectwd_fwd.hpp \
	$(top_srcdir)/src/core/dependableobjectwd_decl.hpp \
	$(top_srcdir)/src/core/dependableobjectwd.hpp \
	$(top_srcdir)/src/core/dependableobjectwd.cpp \
	$(top_srcdir)/src/core/commutationdepobj_decl.hpp \
	$(top_srcdir)/src/core/commutationdepobj.hpp \
	$(top_srcdir)/src/core/trackableobject_fwd.hpp \
	$(top_srcdir)/src/core/trackableobject_decl.hpp \
	$(top_srcdir)/src/core/trackableobject.hpp \
	$(top_srcdir)/src/core/dependenciesdomain_fwd.hpp \
	$(top_srcdir)/src/core/dependenciesdomain_decl.hpp \
	$(top_srcdir)/src/core/dependenciesdomain.hpp \
	$(top_srcdir)/src/core/dependenciesdomain.cpp \
	$(top_srcdir)/src/core/synchronizedcondition_fwd.hpp \
	$(top_srcdir)/src/core/synchronizedcondition_decl.hpp \
	$(top_srcdir)/src/core/synchronizedcondition.hpp \
	$(top_srcdir)/src/core/directory_decl.hpp \
	$(top_srcdir)/src/core/directory.hpp \
	$(top_srcdir)/src/core/directory.cpp \
	$(top_srcdir)/src/core/cache_map_decl.hpp \
	$(top_srcdir)/src/core/cache_map.hpp \
	$(top_srcdir)/src/core/pminterface_decl.hpp  \
	$(top_srcdir)/src/core/basethread_decl.hpp \
	$(top_srcdir)/src/core/address_fwd.hpp \
	$(top_srcdir)/src/core/address_decl.hpp \
	$(top_srcdir)/src/core/address.hpp \
	$(top_srcdir)/src/core/basedependency_fwd.hpp \
	$(top_srcdir)/src/core/basedependency_decl.hpp \
	$(END)

instr_sources = \
	$(top_srcdir)/src/core/instrumentation.cpp \
	$(top_srcdir)/src/core/instrumentationcontext.cpp \
	$(END)

END = 

# Common flags and files
common_includes = \
	-I$(top_srcdir)/src/arch/unix-os \
	-I$(top_srcdir)/src/support \
	-I$(top_srcdir)/src/core \
	-I$(top_srcdir)/src/arch/smp \
	-I$(top_srcdir)/src/arch/spu \
	-I$(top_srcdir)/src/arch/gpu \
	-I$(top_srcdir)/src/arch/opencl \
	$(END)

devincludedir = $(prefix)/include/nanox-dev
#hwloc_cxxflags = -DHWLOC -I
#hwloc_ldflags = -L -lhwloc
papi_cxxflags = -I/home/dprat/Applications/papi-5.3.0/include -DPAPI
papi_ldflags = -L/home/dprat/Applications/papi-5.3.0/lib -lpapi
common_cflags = -Wall -Wextra -Werror -Wshadow -Wmissing-declarations -Wno-unused-parameter  -include"new_decl.hpp" -pthread $(CFLAGS) $(hwloc_cxxflags) $(papi_cxxflags)
#common_cflags = -qinclude="new_decl.hpp" -qlanglvl=variadictemplates $(CFLAGS) $(hwloc_cxxflags)
common_fcflags = -Wall -Wextra -Wshadow -Wno-unused-parameter -pthread -fPIC -DPIC
#common_fcflags = -qPIC -DPIC
no_inline_flag = -fno-inline
#no_inline_flag = -qnoinline
#ignore_muldefs = -Wl,-z,muldefs
bin_cxxflags = $(common_cflags) -DLIBDIR=\"$(libdir)\" -D_NANOS_INTERNAL 
global_perfo_cxxflags = $(common_cflags) -DLIBDIR=\"$(libdir)\" -O3
common_perfo_cxxflags = $(global_perfo_cxxflags) -D_NANOS_INTERNAL
global_perfo_fcflags = $(common_fcflags) -DLIBDIR=\"$(libdir)\" -O3
common_perfo_fcflags = $(global_perfo_fcflags) -D_NANOS_INTERNAL
perfo_cflags = -O3
global_debug_cxxflags = $(common_cflags) -DLIBDIR=\"$(libdir)\" -O0 -g2 $(no_inline_flag) -DNANOS_DEBUG_ENABLED
common_debug_cxxflags = $(global_debug_cxxflags) -D_NANOS_INTERNAL
global_debug_fcflags = $(common_fcflags) -DLIBDIR=\"$(libdir)\" -O0 -g2 $(no_inline_flag) -DNANOS_DEBUG_ENABLED
common_debug_fcflags = $(global_debug_fcflags) -D_NANOS_INTERNAL
debug_cflags = -O0 -g2
global_instr_cxxflags = $(common_cflags) -DLIBDIR=\"$(libdir)\" -O3 -DNANOS_INSTRUMENTATION_ENABLED
common_instr_cxxflags = $(global_instr_cxxflags) -D_NANOS_INTERNAL
global_instr_fcflags = $(common_fcflags) -DLIBDIR=\"$(libdir)\" -O3 -DNANOS_INSTRUMENTATION_ENABLED
common_instr_fcflags = $(global_instr_fcflags) -D_NANOS_INTERNAL
instr_cflags = -O3
global_instrdebug_cxxflags = $(common_cflags) -DLIBDIR=\"$(libdir)\" -O0 -g2 $(no_inline_flag) -DNANOS_DEBUG_ENABLED -DNANOS_INSTRUMENTATION_ENABLED
common_instrdebug_cxxflags = $(global_instrdebug_cxxflags) -D_NANOS_INTERNAL
global_instrdebug_fcflags = $(common_fcflags) -DLIBDIR=\"$(libdir)\" -O0 -g2 $(no_inline_flag) -DNANOS_DEBUG_ENABLED -DNANOS_INSTRUMENTATION_ENABLED 
common_instrdebug_fcflags = $(global_instrdebug_fcflags) -D_NANOS_INTERNAL
instrdebug_cflags = -O0 -g2
version_flags = -version-info 1:0:0
ld_plugin_flags = -avoid-version $(hwloc_ldflags)
#debug_LTLIBRARIES = libnanox.la
#nanos_cxxflags = $(common_includes) $(common_debug_cxxflags) 
#nanos_ldflags = $(version_flags)  -Wl,-rpath,$(debugdir) $(ignore_muldefs) $(hwloc_ldflags) $(papi_ldflags)
#libnanox_la_CFLAGS = $(common_cflags) $(common_debug_cflags)
#libnanox_la_CXXFLAGS = $(nanos_cxxflags)
#libnanox_la_LDFLAGS = $(nanos_ldflags)
#libnanox_la_LIBADD = $(common_libadd)   $(abs_top_builddir)/src/arch/smp/debug/libsmp.la $(abs_top_builddir)/src/arch/unix-os/debug/libos.la $(abs_top_builddir)/src/support/debug/libsupport.la
#libnanox_la_SOURCES = $(common_sources)
#libnanox_la_DEPENDENCIES = $(common_libadd)   $(abs_top_builddir)/src/arch/smp/debug/libsmp.la $(abs_top_builddir)/src/arch/unix-os/debug/libos.la $(abs_top_builddir)/src/support/debug/libsupport.la
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/core/version_commons.am $(top_srcdir)/src/common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/core/debug/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/core/debug/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-debugLTLIBRARIES: $(debug_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(debugdir)" || $(MKDIR_P) "$(DESTDIR)$(debugdir)"
	@list='$(debug_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(debugLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(debugdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(debugLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(debugdir)/$$f"; \
	  else :; fi; \
	done

uninstall-debugLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(debug_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(debugdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(debugdir)/$$p"; \
	done

clean-debugLTLIBRARIES:
	-test -z "$(debug_LTLIBRARIES)" || rm -f $(debug_LTLIBRARIES)
	@list='$(debug_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libnanox.la: $(libnanox_la_OBJECTS) $(libnanox_la_DEPENDENCIES) 
	$(libnanox_la_LINK) $(am_libnanox_la_rpath) $(libnanox_la_OBJECTS) $(libnanox_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libnanox_la-accelerator.Plo
include ./$(DEPDIR)/libnanox_la-basethread.Plo
include ./$(DEPDIR)/libnanox_la-dependableobject.Plo
include ./$(DEPDIR)/libnanox_la-dependableobjectwd.Plo
include ./$(DEPDIR)/libnanox_la-dependenciesdomain.Plo
include ./$(DEPDIR)/libnanox_la-directory.Plo
include ./$(DEPDIR)/libnanox_la-processingelement.Plo
include ./$(DEPDIR)/libnanox_la-schedule.Plo
include ./$(DEPDIR)/libnanox_la-system.Plo
include ./$(DEPDIR)/libnanox_la-threadteam.Plo
include ./$(DEPDIR)/libnanox_la-workdescriptor.Plo
include ./$(DEPDIR)/libnanox_la-workgroup.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libnanox_la-threadteam.lo: $(top_srcdir)/src/core/threadteam.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-threadteam.lo -MD -MP -MF $(DEPDIR)/libnanox_la-threadteam.Tpo -c -o libnanox_la-threadteam.lo `test -f '$(top_srcdir)/src/core/threadteam.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/threadteam.cpp
	mv -f $(DEPDIR)/libnanox_la-threadteam.Tpo $(DEPDIR)/libnanox_la-threadteam.Plo
#	source='$(top_srcdir)/src/core/threadteam.cpp' object='libnanox_la-threadteam.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-threadteam.lo `test -f '$(top_srcdir)/src/core/threadteam.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/threadteam.cpp

libnanox_la-basethread.lo: $(top_srcdir)/src/core/basethread.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-basethread.lo -MD -MP -MF $(DEPDIR)/libnanox_la-basethread.Tpo -c -o libnanox_la-basethread.lo `test -f '$(top_srcdir)/src/core/basethread.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/basethread.cpp
	mv -f $(DEPDIR)/libnanox_la-basethread.Tpo $(DEPDIR)/libnanox_la-basethread.Plo
#	source='$(top_srcdir)/src/core/basethread.cpp' object='libnanox_la-basethread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-basethread.lo `test -f '$(top_srcdir)/src/core/basethread.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/basethread.cpp

libnanox_la-processingelement.lo: $(top_srcdir)/src/core/processingelement.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-processingelement.lo -MD -MP -MF $(DEPDIR)/libnanox_la-processingelement.Tpo -c -o libnanox_la-processingelement.lo `test -f '$(top_srcdir)/src/core/processingelement.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/processingelement.cpp
	mv -f $(DEPDIR)/libnanox_la-processingelement.Tpo $(DEPDIR)/libnanox_la-processingelement.Plo
#	source='$(top_srcdir)/src/core/processingelement.cpp' object='libnanox_la-processingelement.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-processingelement.lo `test -f '$(top_srcdir)/src/core/processingelement.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/processingelement.cpp

libnanox_la-accelerator.lo: $(top_srcdir)/src/core/accelerator.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-accelerator.lo -MD -MP -MF $(DEPDIR)/libnanox_la-accelerator.Tpo -c -o libnanox_la-accelerator.lo `test -f '$(top_srcdir)/src/core/accelerator.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/accelerator.cpp
	mv -f $(DEPDIR)/libnanox_la-accelerator.Tpo $(DEPDIR)/libnanox_la-accelerator.Plo
#	source='$(top_srcdir)/src/core/accelerator.cpp' object='libnanox_la-accelerator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-accelerator.lo `test -f '$(top_srcdir)/src/core/accelerator.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/accelerator.cpp

libnanox_la-schedule.lo: $(top_srcdir)/src/core/schedule.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-schedule.lo -MD -MP -MF $(DEPDIR)/libnanox_la-schedule.Tpo -c -o libnanox_la-schedule.lo `test -f '$(top_srcdir)/src/core/schedule.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/schedule.cpp
	mv -f $(DEPDIR)/libnanox_la-schedule.Tpo $(DEPDIR)/libnanox_la-schedule.Plo
#	source='$(top_srcdir)/src/core/schedule.cpp' object='libnanox_la-schedule.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-schedule.lo `test -f '$(top_srcdir)/src/core/schedule.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/schedule.cpp

libnanox_la-system.lo: $(top_srcdir)/src/core/system.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-system.lo -MD -MP -MF $(DEPDIR)/libnanox_la-system.Tpo -c -o libnanox_la-system.lo `test -f '$(top_srcdir)/src/core/system.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/system.cpp
	mv -f $(DEPDIR)/libnanox_la-system.Tpo $(DEPDIR)/libnanox_la-system.Plo
#	source='$(top_srcdir)/src/core/system.cpp' object='libnanox_la-system.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-system.lo `test -f '$(top_srcdir)/src/core/system.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/system.cpp

libnanox_la-workgroup.lo: $(top_srcdir)/src/core/workgroup.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-workgroup.lo -MD -MP -MF $(DEPDIR)/libnanox_la-workgroup.Tpo -c -o libnanox_la-workgroup.lo `test -f '$(top_srcdir)/src/core/workgroup.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/workgroup.cpp
	mv -f $(DEPDIR)/libnanox_la-workgroup.Tpo $(DEPDIR)/libnanox_la-workgroup.Plo
#	source='$(top_srcdir)/src/core/workgroup.cpp' object='libnanox_la-workgroup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-workgroup.lo `test -f '$(top_srcdir)/src/core/workgroup.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/workgroup.cpp

libnanox_la-workdescriptor.lo: $(top_srcdir)/src/core/workdescriptor.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-workdescriptor.lo -MD -MP -MF $(DEPDIR)/libnanox_la-workdescriptor.Tpo -c -o libnanox_la-workdescriptor.lo `test -f '$(top_srcdir)/src/core/workdescriptor.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/workdescriptor.cpp
	mv -f $(DEPDIR)/libnanox_la-workdescriptor.Tpo $(DEPDIR)/libnanox_la-workdescriptor.Plo
#	source='$(top_srcdir)/src/core/workdescriptor.cpp' object='libnanox_la-workdescriptor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-workdescriptor.lo `test -f '$(top_srcdir)/src/core/workdescriptor.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/workdescriptor.cpp

libnanox_la-dependableobject.lo: $(top_srcdir)/src/core/dependableobject.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-dependableobject.lo -MD -MP -MF $(DEPDIR)/libnanox_la-dependableobject.Tpo -c -o libnanox_la-dependableobject.lo `test -f '$(top_srcdir)/src/core/dependableobject.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/dependableobject.cpp
	mv -f $(DEPDIR)/libnanox_la-dependableobject.Tpo $(DEPDIR)/libnanox_la-dependableobject.Plo
#	source='$(top_srcdir)/src/core/dependableobject.cpp' object='libnanox_la-dependableobject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-dependableobject.lo `test -f '$(top_srcdir)/src/core/dependableobject.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/dependableobject.cpp

libnanox_la-dependableobjectwd.lo: $(top_srcdir)/src/core/dependableobjectwd.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-dependableobjectwd.lo -MD -MP -MF $(DEPDIR)/libnanox_la-dependableobjectwd.Tpo -c -o libnanox_la-dependableobjectwd.lo `test -f '$(top_srcdir)/src/core/dependableobjectwd.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/dependableobjectwd.cpp
	mv -f $(DEPDIR)/libnanox_la-dependableobjectwd.Tpo $(DEPDIR)/libnanox_la-dependableobjectwd.Plo
#	source='$(top_srcdir)/src/core/dependableobjectwd.cpp' object='libnanox_la-dependableobjectwd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-dependableobjectwd.lo `test -f '$(top_srcdir)/src/core/dependableobjectwd.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/dependableobjectwd.cpp

libnanox_la-dependenciesdomain.lo: $(top_srcdir)/src/core/dependenciesdomain.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-dependenciesdomain.lo -MD -MP -MF $(DEPDIR)/libnanox_la-dependenciesdomain.Tpo -c -o libnanox_la-dependenciesdomain.lo `test -f '$(top_srcdir)/src/core/dependenciesdomain.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/dependenciesdomain.cpp
	mv -f $(DEPDIR)/libnanox_la-dependenciesdomain.Tpo $(DEPDIR)/libnanox_la-dependenciesdomain.Plo
#	source='$(top_srcdir)/src/core/dependenciesdomain.cpp' object='libnanox_la-dependenciesdomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-dependenciesdomain.lo `test -f '$(top_srcdir)/src/core/dependenciesdomain.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/dependenciesdomain.cpp

libnanox_la-directory.lo: $(top_srcdir)/src/core/directory.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -MT libnanox_la-directory.lo -MD -MP -MF $(DEPDIR)/libnanox_la-directory.Tpo -c -o libnanox_la-directory.lo `test -f '$(top_srcdir)/src/core/directory.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/directory.cpp
	mv -f $(DEPDIR)/libnanox_la-directory.Tpo $(DEPDIR)/libnanox_la-directory.Plo
#	source='$(top_srcdir)/src/core/directory.cpp' object='libnanox_la-directory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanox_la_CXXFLAGS) $(CXXFLAGS) -c -o libnanox_la-directory.lo `test -f '$(top_srcdir)/src/core/directory.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/core/directory.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-devincludeHEADERS: $(devinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(devincludedir)" || $(MKDIR_P) "$(DESTDIR)$(devincludedir)"
	@list='$(devinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(devincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(devincludedir)/$$f'"; \
	  $(devincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(devincludedir)/$$f"; \
	done

uninstall-devincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(devinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(devincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(devincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(debugdir)" "$(DESTDIR)$(devincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-debugLTLIBRARIES clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-debugLTLIBRARIES install-devincludeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-debugLTLIBRARIES uninstall-devincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-debugLTLIBRARIES clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-debugLTLIBRARIES \
	install-devincludeHEADERS install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-debugLTLIBRARIES \
	uninstall-devincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
